language: cpp
os:
  - linux
  - osx
compiler:
  - gcc
  - clang
branches:
  only:
    - master
    - develop
script:
  - mkdir build_directory
  - cd build_directory
  - cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug —DDOUBLE_PRECISION_ENABLED=True -DCOMPILE_TESTS=True ../
  - make && make test
  - cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug —DDOUBLE_PRECISION_ENABLED=False -DCOMPILE_TESTS=True ../
  - make && make test
  - cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release —DDOUBLE_PRECISION_ENABLED=True -DCOMPILE_TESTS=True ../
  - make && make test
  - cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release —DDOUBLE_PRECISION_ENABLED=False -DCOMPILE_TESTS=True ../
  - make && make test

env:
  global:
    # COVERITY_SCAN_TOKEN
    - secure: "QxALeVR4akx2ZswFAO96ew"

addons:
  coverity_scan:

    # GitHub project metadata
    project:
      name: DanielChappuis/reactphysics3d
      version: 1.0
      description: ReactPhysics3D

    # Where email notification of build analysis results will be sent
    notification_email: chappuis.daniel@gmail.com

    # Commands to prepare for build_command
    # ** likely specific to your build **
    #build_command_prepend: ./configure

    # The command that will be added as an argument to "cov-build" to compile your project for analysis,
    # ** likely specific to your build **
    build_command: make

    # Pattern to match selecting branches that will run analysis. We recommend leaving this set to 'coverity_scan'.
    # Take care in resource usage, and consider the build frequency allowances per
    #   https://scan.coverity.com/faq#frequency
    branch_pattern: develop